// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package oqladdon.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import oqladdon.implementation.OQLAddOn;

/**
 * This action extends the OQL module that is available in the Marketplace (https://marketplace.mendix.com/link/component/66876)
 * 
 * The addition is that objects are loaded instead of created. 
 * 
 * This action executes a given OQL statement and accepts parameters. The query should have as only and first column the ID of the object that you want to retrieve. 
 * 
 * 
 * One can specify using the preserveParameters argument if parameters should be reset after invocation of this action.
 * 
 * Statements can easily be developed using the DataSet and one can use the Mendix documentation (https://docs.mendix.com/refguide/oql/) as reference. The name of the dataset parameter needs to be Module.DatasetName.
 * 
 * Parameters given should be a list of OQL.Parameter, having at least the ParameterName and ParameterType set.
 * ParameterNames follow the syntax $Name
 * 
 */
public class executeOQLDataSet extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String OQLDataSetName;
	private java.lang.String returnEntity;
	private java.lang.Boolean preserveParameters;

	public executeOQLDataSet(IContext context, java.lang.String OQLDataSetName, java.lang.String returnEntity, java.lang.Boolean preserveParameters)
	{
		super(context);
		this.OQLDataSetName = OQLDataSetName;
		this.returnEntity = returnEntity;
		this.preserveParameters = preserveParameters;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		// Set query
		String statement = Core.createOQLTextGetRequestFromDataSet(this.OQLDataSetName).getQuery();
		return OQLAddOn.executeOQLQuery(getContext(), statement, preserveParameters);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "executeOQLDataSet";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
